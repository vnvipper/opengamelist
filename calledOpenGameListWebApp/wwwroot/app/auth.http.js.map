{"version":3,"sources":["auth.http.ts"],"names":["AuthHttp","http","this","authKey","prototype","get","url","opts","configureAuth","post","data","put","delete","i","localStorage","getItem","auth","JSON","parse","console","log","access_token","header","http_1","Headers","set","__decorate","core_1","Injectable","exports_1"],"mappings":"q1BAKAA,SAAA,WAII,QAAAA,UAAYC,MAHZC,KAAAD,KAAO,KACPC,KAAAC,QAAU,OAGND,KAAKD,KAAOA,KAqCpB,MAlCID,UAAAI,UAAAC,IAAA,SAAIC,IAAKC,MAEL,WAFK,KAAAA,OAAAA,SACLL,KAAKM,cAAcD,MACZL,KAAKD,KAAKI,IAAIC,IAAKC,OAG9BP,SAAAI,UAAAK,KAAA,SAAKH,IAAKI,KAAMH,MAEZ,WAFY,KAAAA,OAAAA,SACZL,KAAKM,cAAcD,MACZL,KAAKD,KAAKQ,KAAKH,IAAKI,KAAMH,OAGrCP,SAAAI,UAAAO,IAAA,SAAIL,IAAKI,KAAMH,MAEX,WAFW,KAAAA,OAAAA,SACXL,KAAKM,cAAcD,MACZL,KAAKD,KAAKU,IAAIL,IAAKI,KAAMH,OAGpCP,SAAAI,UAAAQ,OAAA,SAAON,IAAKC,MAER,WAFQ,KAAAA,OAAAA,SACRL,KAAKM,cAAcD,MACZL,KAAKD,KAAKW,OAAON,IAAKC,OAGjCP,SAAAI,UAAAI,cAAA,SAAcD,MACV,GAAIM,GAAIC,aAAaC,QAAQb,KAAKC,QAClC,IAAS,MAALU,EAAW,CACX,GAAIG,MAAOC,KAAKC,MAAML,EACtBM,SAAQC,IAAIJ,MACa,MAArBA,KAAKK,eACc,MAAfd,KAAKe,SACLf,KAAKe,OAAS,GAAIC,QAAAC,SAEtBjB,KAAKe,OAAOG,IAAI,gBAAiB,UAAUT,KAAKK,iBAvChErB,SAAA0B,YAACC,OAAAC,yEAEDC,UAAA,WAAA7B","file":"auth.http.js","sourcesContent":["import { Injectable } from '@angular/core'; \r\nimport { Http, Headers } from '@angular/http';\r\n\r\n@Injectable()\r\n\r\nexport class AuthHttp {\r\n    http = null;\r\n    authKey = \"auth\";\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n    }\r\n\r\n    get(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.get(url, opts);\r\n    }\r\n\r\n    post(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.post(url, data, opts);\r\n    }\r\n\r\n    put(url, data, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.put(url, data, opts);\r\n    }\r\n\r\n    delete(url, opts = {}) {\r\n        this.configureAuth(opts);\r\n        return this.http.delete(url, opts);\r\n    }\r\n\r\n    configureAuth(opts: any) {\r\n        var i = localStorage.getItem(this.authKey);\r\n        if (i != null) {\r\n            var auth = JSON.parse(i);\r\n            console.log(auth);\r\n            if (auth.access_token != null) {\r\n                if (opts.header == null) {\r\n                    opts.header = new Headers();\r\n                }\r\n                opts.header.set(\"Authorization\", `Bearer ${auth.access_token}`);\r\n            }\r\n        }\r\n    }\r\n\r\n}"]}