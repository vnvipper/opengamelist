{"version":3,"sources":["login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","isLoggedIn","navigate","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","err","console","log","__decorate","core_1","Component","selector","template","exports_1"],"mappings":"igCA8BAA,eAAA,WAII,QAAAA,gBAAoBC,GAAyBC,OAAwBC,aAAjDC,KAAAH,GAAAA,GAAyBG,KAAAF,OAAAA,OAAwBE,KAAAD,YAAAA,YAHrEC,KAAAC,MAAQ,QACRD,KAAAE,UAAY,KACZF,KAAAG,YAAa,EAELH,KAAKD,YAAYK,cAAgBJ,KAAKF,OAAOO,UAAU,KAC3DL,KAAKE,UAAYL,GAAGS,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YAuBtC,MAnBId,gBAAAgB,UAAAC,aAAA,SAAaC,GAAb,GAAAC,OAAAf,IACIc,GAAEE,gBACF,IAAIT,UAAWP,KAAKE,UAAUe,MAAMV,SAChCI,SAAWX,KAAKE,UAAUe,MAAMN,QAEpCX,MAAKD,YAAYmB,MAAMX,SAAUI,UAAUQ,UAAU,SAACC,MAE9CL,MAAKZ,YAAa,CAClB,IAAIkB,MAAON,MAAKhB,YAAYuB,SAC5BC,OAAM,iBAAmBF,KAAKG,cAC9BT,MAAKjB,OAAOO,UAAU,MAE1B,SAACoB,KACGC,QAAQC,IAAIF,KAEZV,MAAKZ,YAAa,KAnDlCP,eAAAgC,YAACC,OAAAC,WACGC,SAAU,QACVC,SACA,iuCAqBJC,UAAA,iBAAArC","file":"login.component.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators } from \"@angular/forms\"; \r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService} from \"./auth.service\";\r\n\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    template: \r\n    `\r\n<div class=\"login-container\">    \r\n            <h2 class=\"form-login-heading\">Login</h2>    \r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginError\">        \r\n                <strong>Warning:</strong> Username or Password mismatch    \r\n            </div>    \r\n            <form class=\"form-login\" [formGroup]=\"loginForm\" (submit)=\"performLogin($event)\">        \r\n                <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Your username or e-mail address\" required autofocus />        \r\n                <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Your password\" required />        \r\n                <div class=\"checkbox\">            \r\n                    <label>                \r\n                        <input type=\"checkbox\" value=\"remember-me\">                \r\n                        Remember me            \r\n                    </label>        \r\n                </div>        \r\n                <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>    \r\n            </form> \r\n        </div> \r\n    `\r\n})\r\n\r\nexport class LoginComponent {\r\n    title = \"Login\";\r\n    loginForm = null;\r\n    loginError = false;\r\n    constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\r\n        if (this.authService.isLoggedIn()) { this.router.navigate([\"\"]); }\r\n        this.loginForm = fb.group({\r\n            username: [\"\", Validators.required],\r\n            password: [\"\", Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        var username = this.loginForm.value.username;\r\n        var password = this.loginForm.value.password;\r\n\r\n        this.authService.login(username, password).subscribe((data) => {\r\n                // login successful                \r\n                this.loginError = false;\r\n                var auth = this.authService.getAuth();\r\n                alert(\"Our Token is: \" + auth.access_token);\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            (err) => {\r\n                console.log(err);\r\n                // login failure\r\n                this.loginError = true;\r\n            });\r\n\r\n    }\r\n}\r\n\r\n"]}