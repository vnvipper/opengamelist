{"version":3,"sources":["item-detail.component.ts"],"names":["ItemDetailComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onBack","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"0/BAgDAA,oBAAA,WAEI,QAAAA,qBAAoBC,YACRC,OACAC,gBAFQC,KAAAH,YAAAA,YACRG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eAkDhB,MAhDIH,qBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,KACAJ,KAAKH,YAAYU,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OACvDC,QAAQC,IAAIX,KAAKS,OACH,IAAPL,IACPM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAGpCH,QAAQC,IAAI,uCACZX,KAAKF,OAAOgB,UAAU,OAI9BlB,oBAAAK,UAAAc,SAAA,SAASN,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYmB,IAAIP,MAAMD,UACvB,SAAAS,MACId,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,oBACrCf,MAAKL,OAAOgB,UAAU,MAE1B,SAAAK,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,oBAAAK,UAAAmB,SAAA,SAASX,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYwB,OAAOZ,MAAMD,UAC9B,SAAAS,MACId,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,sBACrCf,MAAKL,OAAOgB,UAAU,MAEtB,SAAAK,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,oBAAAK,UAAAqB,SAAA,SAASb,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKS,EACdlB,MAAKH,YAAY0B,OAAOnB,IAAII,UACxB,SAAAS,MACIP,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOgB,UAAU,MAE1B,SAAAK,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,oBAAAK,UAAAuB,OAAA,WACIxB,KAAKF,OAAOgB,UAAU,MA/F9BlB,oBAAA6B,YAACC,OAAAC,WACGC,SAAU,cACVC,SAAU,m/BAwBVC,QAAS,2lBAiBbC,UAAA,sBAAAnC","file":"item-detail.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\"; \r\nimport { Router, ActivatedRoute } from \"@angular/router\"; \r\nimport { Item } from \"./item\"; \r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail\",\r\n    template: `\r\n    <div *ngIf=\"item\" class=\"item-details\">\r\n        <h2>{{item.Title}} - Detail View</h2>\r\n        <ul>\r\n            <li>\r\n                <label>Title</label>\r\n                <input [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" />\r\n            </li>\r\n            <li>\r\n                <label>Description</label>\r\n                <input [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\" />\r\n            </li>\r\n        </ul>\r\n<div *ngIf=\"item.Id == 0\" class=\"commands insert\">\r\n    <input type=\"button\" value=\"Save\" (click)=\"onInsert(item)\"/>\r\n    <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\"/>\r\n</div>  \r\n            <div *ngIf=\"item.Id != 0\" class=\"commands update\">\r\n                <input type=\"button\" value=\"Update\" (click)=\"onUpdate(item)\"/>\r\n                <input type=\"button\" value=\"Delete\" (click)=\"onDelete(item)\"/>\r\n                <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\"/>\r\n            </div>  \r\n    </div>\r\n                `,\r\n    styles: [` \r\n        .item-details {            \r\n            margin: 5px;            \r\n            padding: 5px 10px;            \r\n            border: 1px solid black;            \r\n            background-color: #dddddd;            \r\n            width: 300px;        \r\n        }        \r\n        .item-details * {           \r\n            vertical-align: middle;        \r\n        }        \r\n        .item-details ul li {            \r\n            padding: 5px 0;        \r\n        }\r\n`]\r\n})\r\n\r\nexport class ItemDetailComponent  {\r\n    item: Item;\r\n    constructor(private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n            console.log(this.item);\r\n        } else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            data => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n        data => {\r\n            this.item = data;\r\n            console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n            this.router.navigate([\"\"]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            data => {\r\n                console.log(\"Item \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n}"]}