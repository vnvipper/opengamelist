{"version":3,"sources":["item-detail-edit.component.ts"],"names":["ItemDetailEditComponent","itemService","router","activatedRoute","this","prototype","ngOnInit","_this","id","snapshot","params","get","subscribe","item","console","log","item_1","Item","navigate","onInsert","add","data","Id","error","onUpdate","update","onDelete","delete","onItemDetailView","onBack","__decorate","core_1","Component","selector","template","styles","exports_1"],"mappings":"8/BAoDAA,wBAAA,WAEI,QAAAA,yBAAoBC,YACRC,OACAC,gBAFQC,KAAAH,YAAAA,YACRG,KAAAF,OAAAA,OACAE,KAAAD,eAAAA,eAsDhB,MApDIH,yBAAAK,UAAAC,SAAA,WAAA,GAAAC,OAAAH,KACQI,IAAMJ,KAAKD,eAAeM,SAASC,OAAW,EAC9CF,KACAJ,KAAKH,YAAYU,IAAIH,IAAII,UAAU,SAAAC,MAAQ,MAAAN,OAAKM,KAAOA,OACvDC,QAAQC,IAAIX,KAAKS,OACH,IAAPL,IACPM,QAAQC,IAAI,iCACZX,KAAKS,KAAO,GAAIG,QAAAC,KAAK,EAAG,WAAY,QAGpCH,QAAQC,IAAI,uCACZX,KAAKF,OAAOgB,UAAU,OAI9BlB,wBAAAK,UAAAc,SAAA,SAASN,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYmB,IAAIP,MAAMD,UACvB,SAAAS,MACId,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,oBACrCf,MAAKL,OAAOgB,UAAU,MAE1B,SAAAK,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,wBAAAK,UAAAmB,SAAA,SAASX,MAAT,GAAAN,OAAAH,IACIA,MAAKH,YAAYwB,OAAOZ,MAAMD,UAC1B,SAAAS,MACId,MAAKM,KAAOQ,KACZP,QAAQC,IAAI,QAAUR,MAAKM,KAAKS,GAAK,sBACrCf,MAAKL,OAAOgB,UAAU,YAAaX,MAAKM,KAAKS,MAEjD,SAAAC,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,wBAAAK,UAAAqB,SAAA,SAASb,MAAT,GAAAN,OAAAH,KACQI,GAAKK,KAAKS,EACdlB,MAAKH,YAAY0B,OAAOnB,IAAII,UACxB,SAAAS,MACIP,QAAQC,IAAI,QAAUP,GAAK,sBAC3BD,MAAKL,OAAOgB,UAAU,MAE1B,SAAAK,OAAS,MAAAT,SAAQC,IAAIQ,UAG7BvB,wBAAAK,UAAAuB,iBAAA,SAAiBf,MACZT,KAAKF,OAAOgB,UAAU,YAAaL,KAAKS,MAG7CtB,wBAAAK,UAAAwB,OAAA,WACIzB,KAAKF,OAAOgB,UAAU,MAvG9BlB,wBAAA8B,YAACC,OAAAC,WACGC,SAAU,cACVC,SAAU,8mDA8BVC,QAAS,+lCAebC,UAAA,0BAAApC","file":"item-detail-edit.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Item } from \"./item\";\r\nimport { ItemService } from \"./item.service\";\r\n\r\n@Component({\r\n    selector: \"item-detail\",\r\n    template: `\r\n    <div *ngIf=\"item\" class=\"item-container\">    \r\n        <div class=\"item-tab-menu\">        \r\n            <span class=\"selected\">Edit</span>        \r\n            <span *ngIf=\"item.Id != 0\" (click)=\"onItemDetailView(item)\">View</span>    \r\n        </div>    \r\n        <div class=\"item-details\">        \r\n            <div class=\"mode\">Edit Mode</div>        \r\n            <h2>{{item.Title}}</h2>        \r\n            <ul>            \r\n                <li>                \r\n                    <label>Title:</label>                \r\n                    <input [(ngModel)]=\"item.Title\" placeholder=\"Insert the title...\" /> </li>            \r\n                <li>                \r\n                    <label>Description:</label>                \r\n                    <textarea [(ngModel)]=\"item.Description\" placeholder=\"Insert a suitable description...\"></textarea>            \r\n                </li>        \r\n            </ul>        \r\n            <div *ngIf=\"item.Id == 0\" class=\"commands insert\">            \r\n                <input type=\"button\" value=\"Save\" (click)=\"onInsert(item)\" />            \r\n                <input type=\"button\" value=\"Cancel\" (click)=\"onBack()\" />        \r\n            </div>        \r\n            <div *ngIf=\"item.Id != 0\" class=\"commands update\">            \r\n                <input type=\"button\" value=\"Update\" (click)=\"onUpdate(item)\" />            \r\n                <input type=\"button\" value=\"Delete\" (click)=\"onDelete(item)\" />            \r\n                <input type=\"button\" value=\"Cancel\" (click)=\"onItemDetailView(item)\" />        \r\n            </div>    \r\n        </div> \r\n    </div> \r\n                `,\r\n    styles: [` \r\n        .item-container {    width: 600px; }\r\n.item-tab-menu {    margin-right: 30px; }\r\n.item-tab-menu span {    background-color: #dddddd;    border: 1px solid #666666;    border-bottom: 0;    cursor: pointer;    display: block;    float: right;    margin: 0 0 -1px 5px;    padding: 5px 10px 4px 10px;   text-align: center;    width: 60px; }\r\n.item-tab-menu span.selected {    background-color: #eeeeee;    cursor: auto;    font-weight: bold;    padding-bottom: 5px; }\r\n.item-details {    background-color: #eeeeee;    border: 1px solid black;    clear: both;    margin: 0;    padding: 5px 10px; }\r\n.item-details * {    vertical-align: middle; }\r\n.item-details .mode {    font-size: 0.8em;    color: #777777; }\r\n.item-details ul li {    padding: 5px 0; }\r\n.item-details input[type=\"text\"] {    display: block;    width: 100%; }\r\n.item-details textarea {    display: block;    width: 100%;    height: 60px; }\r\n.commands {    text-align: right;    margin: 10px 20px 10px 10px; }\r\n`]\r\n})\r\n\r\nexport class ItemDetailEditComponent {\r\n    item: Item;\r\n    constructor(private itemService: ItemService,\r\n        private router: Router,\r\n        private activatedRoute: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        var id = +this.activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            this.itemService.get(id).subscribe(item => this.item = item);\r\n            console.log(this.item);\r\n        } else if (id === 0) {\r\n            console.log(\"id is 0: adding a new item...\");\r\n            this.item = new Item(0, \"New Item\", null);\r\n        }\r\n        else {\r\n            console.log(\"Invalid id: routing back to home...\");\r\n            this.router.navigate([\"\"]);\r\n        }\r\n    }\r\n\r\n    onInsert(item: Item) {\r\n        this.itemService.add(item).subscribe(\r\n            data => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been added.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onUpdate(item: Item) {\r\n        this.itemService.update(item).subscribe(\r\n            data => {\r\n                this.item = data;\r\n                console.log(\"Item \" + this.item.Id + \" has been updated.\");\r\n                this.router.navigate([\"item/view\", this.item.Id]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onDelete(item: Item) {\r\n        var id = item.Id;\r\n        this.itemService.delete(id).subscribe(\r\n            data => {\r\n                console.log(\"Item \" + id + \" has been deleted.\");\r\n                this.router.navigate([\"\"]);\r\n            },\r\n            error => console.log(error));\r\n    }\r\n\r\n    onItemDetailView(item: Item) {\r\n         this.router.navigate([\"item/view\", item.Id]);\r\n    } \r\n\r\n    onBack() {\r\n        this.router.navigate([\"\"]);\r\n    }\r\n}"]}